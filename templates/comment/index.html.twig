{% extends 'base.html.twig' %}

{% block title %}Liste des articles{% endblock %}

{% block body %}

<select id="groupby">
    <option value="">Lister par</option>
    <option value="article">Article</option>
    <option value="author">Auteur</option>
</select>

<div>
    Filtrer par auteur
    <input type="text" id="filter_users" list="users" placeholder="Rechercher un utilisateur..." class="border p-2 rounded w-full" />

    <datalist id="users">
        {% for user in users %}
            <option value="{{ user.username }}"></option>
        {% endfor %}
    </datalist>

    <button id="reset">Réinitaliser</button>
</div>

<div>
    {% for comment in comments %}
        <div>Article associé :
            <p>
                {% if comment.article.content | length > 40 %}
                    {{ comment.article.content | slice(0, 40) }}...
                {% else %}
                    {{ comment.article.content }}
                {% endif %}
            </p>
            <div>Publié le {{ comment.article.publishedAt | date("d/m/Y à H:i") }} par {{ comment.article.user.username }}</div>
        </div>

        <p>{{ comment.content }}</p>
        <div>Publié le {{ comment.createdAt | date("d/m/Y à H:i") }} par {{ comment.author.username }}</div>
        <button class="delete" id="{{comment.id}}">Supprimer</button>
        <hr>
    {% endfor %}
</div>

{% for i in 1..nbPages %}
    <button id="page_{{i}}" class="page">{{ i }}</button>
{% endfor %}

<div id="modal" hidden>
    Êtes-vous sûr de vouloir supprimer ce commentaire ?
    <button id="delete_yes">Oui</button>
    <button id="delete_no">Non</button>
</div>

<script>

const users =
[
    {% for user in users %}
        "{{ user.username }}",
    {% endfor %}
];

document.getElementById("groupby").addEventListener("change", (e) =>
{
    window.location.href = "/comments?groupby=" + e.target.value;
});

document.getElementById("filter_users").addEventListener("input", (e) =>
{
    users.map((user) =>
    {
        if(user === e.target.value)
        {
            window.location.href = "/comments?user=" + e.target.value;
        }
    });
});

document.getElementById("reset").addEventListener("click", () =>
{
    window.location.href = "/comments";
});

const pages = Array.from(document.getElementsByClassName("page"));

pages.map((p) =>
{
    p.addEventListener("click", () =>
    {
        const numPage = p.id.split("_")[1];

        let url = window.location.pathname + window.location.search;

        if(window.location.search === "")
        {
            url += "?page=";
        }
        else
        {
            url += "&page=";
        }

        //console.log(window.location.search, window.location.search.indexOf("page="));

        if(window.location.search.indexOf("page=") === -1)
        {
            url += numPage;
        }
        else
        {
            url = window.location.search.substring(0, window.location.search.indexOf("page=") + 5) + numPage;
        }

        //console.log(url);

        window.location.href = url;
    });
});

const deletes = Array.from(document.getElementsByClassName("delete"));
let idDelete = "";
const modal = document.getElementById("modal");

deletes.map((d) =>
{
    d.addEventListener("click", () =>
    {
        idDelete = d.id;
        modal.hidden = false;
    });
});

document.getElementById("delete_yes").addEventListener("click", () =>
{
    window.location.href = "/comments/delete/" + idDelete;
});

document.getElementById("delete_no").addEventListener("click", () =>
{
    modal.hidden = true;
});

</script>

{% endblock %}
